apiVersion: v1
kind: Secret
metadata:
  name: kcp-sgs-pipelines-multiclusterhub-operator-pull-secret
stringData:
  .dockerconfigjson: >-
    {
      "auths": {
        "quay.io": {
          "auth": "<AUTH_TOKEN>",
          "email": ""
        }
      }
    }
type: kubernetes.io/dockerconfigjson

---

# This secret can also be created simply in the ACM UI, under 'Credentials'

apiVersion: v1
data:
  additionalTrustBundle: ""
  aws_access_key_id: <BASE64_ENCODED_AWS_ACCESS_KEY_ID>
  aws_secret_access_key: <BASE64_ENCODED_AWS_SECRET_ACCESS_KEY>
  baseDomain: <BASE64_ENCODED_BASE_DOMAIN>
  httpProxy: ""
  httpsProxy: ""
  noProxy: ""
  pullSecret: <BASE64_ENCODED_OCP_PULL_SECRET>
kind: Secret
metadata:
  labels:
    cluster.open-cluster-management.io/credentials: ""
    cluster.open-cluster-management.io/type: aws
  name: kcp-sgs-pipelines-acm-aws-creds
  type: Opaque

---

apiVersion: v1
kind: Secret
metadata:
  name: kcp-sgs-pipelines-hypershift-operator-oidc-provider-s3-credentials
stringData:
  bucket: "<S3_BUCKET_NAME>"
  credentials: "<BASE64_ENCODED_AWS_CREDS>"
  region: "<AWS_REGION>"
type: Opaque

---

apiVersion: v1
kind: Secret
metadata:
  name: kcp-sgs-pipelines-acm-azure-creds
  labels:
    cluster.open-cluster-management.io/credentials: ''
    cluster.open-cluster-management.io/type: azr
data:
  cloudName: QXp1cmVQdWJsaWNDbG91ZA== # AzurePublicCloud, just base64 encoded
  httpsProxy: ''
  httpProxy: ''
  baseDomainResourceGroupName: <BASE64_ENCODED_BASEDOMAIN_RESOURCE_GROUP_NAME>
  noProxy: ''
  additionalTrustBundle: ''
  pullSecret: <BASE64_ENCODED_OCP_PULL_SECRET>
  baseDomain: <BASE64_ENCODED_BASEDOMAIN_NAME>
  osServicePrincipal.json: >-
    # BASE64_ENCODED_OS_SERVICE_PRINCIPAL_JSON
    {
      "clientId":"<CLIENT_ID>",
      "clientSecret": "CLIENT_SECRET",
      "tenantId":"<TENANT_ID>"",
      "subscriptionId":"<SUBSCRIPTION_ID>"
    }
type: Opaque

---

apiVersion: v1
kind: Secret
metadata:
  name: kcp-sgs-pipelines-github-idp-info
data:
  clientID: "<BASE64_ENCODED_GITHUB_IDP_CLIENT_ID>" # Required for GitHub IDP. See https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app
  clientSecret: "<BASE64_ENCODED_GITHUB_IDP_CLIENT_SECRET>" # Required for GitHub IDP. See https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app
  awsBucketName: <BASE64_ENCODED_AWS_S3_BUCKET_NAME> # Required for Observability
  awsBucketEndpoint: "<BASE64_ENCODED_AWS_S3_BUCKET_ENDPOINT>" # Required for Observability
  insecure: dHJ1ZQo= # Required for Observability
  awsAccessKey: "<BASE64_ENCODED_AWS_ACCESS_KEY>" # Required for Observability
  awsSecretAccessKey: "<BASE64_ENCODED_AWS_SECRET_ACCESS_KEY>" # Required for Observability
  githubToken: "<BASE64_ENCODED_GITHUB_TOKEN>" # GitHub PAT. Recommended to use bot account PAT. Required to set up AlertManager Github Issue creation 
  defaultSlackAPI: "<BASE64_ENCODED_SLACK_WEBHOOK_URL>" # Required for AlertManager Slack Messaging
  pagerdutyServiceKey: "<BASE64_ENCODED_PAGERDUTY_SERVICE_KEY>" # Required for AlertManager PagerDuty Integration
  kcpKubeConfigStable: "<BASE64_ENCODED_KCP_KUBECONFIG_STABLE>" # Required for KCP Stable
  kcpKubeConfigUnstable: "<BASE64_ENCODED_KCP_KUBECONFIG_UNSTABLE>" # Required for KCP Unstable
  zeroSSL_EAB_KID: "<BASE64_ENCODED_ZERO_SSL_EAB_KID>" # Required for cert-manager. https://app.zerossl.com/developer and click 'Generate' under 'EAB Credentials for ACME Clients'
  zeroSSL_EAB_HMAC_Key: "<BASE64_ENCODED_ZERO_SSL_EAB_HMAC_KEY>" # Required for cert-manager. https://app.zerossl.com/developer and click 'Generate' under 'EAB Credentials for ACME Clients'
type: Opaque
